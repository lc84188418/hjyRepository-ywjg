<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjy.system.dao.TSysRoleMapper">
    <sql id="BaseColumnList">
        pk_role_id,
        role_name,
        role_desc,
        create_date,
        enable_status,
        modify_time,
  </sql>
    <!--No problem 通过主键查询单个-->
    <select id="selectById" resultType="com.hjy.system.entity.TSysRole">
        select * from t_sys_role
        where pk_role_id = #{pkRoleId,jdbcType=VARCHAR}
    </select>
    <!--No problem 通过实体作为筛选条件查询-->
    <select id="selectAllByEntity" resultType="com.hjy.system.entity.TSysRole">
        select * from t_sys_role
        <where>
            <if test="pkRoleId != null and pkRoleId != ''">
                and pk_role_id = #{pkRoleId,jdbcType=VARCHAR}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name like '%${roleName}%'
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                and role_desc = #{roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="enableStatus != null">
                and enable_status = #{enableStatus,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <!--No problem 新增数据-->
    <insert id="insertSelective" parameterType="com.hjy.system.entity.TSysRole">
        insert into t_sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkRoleId != null and pkRoleId != ''">
                pk_role_id,
            </if>
            <if test="roleName != null and roleName != ''">
                role_name,
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                role_desc,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="enableStatus != null">
                enable_status,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkRoleId != null and pkRoleId != ''">
                #{pkRoleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null and roleName != ''">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
            <if test="enableStatus != null">
                #{enableStatus,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <!--No problem 添加角色权限    -->
    <insert id="addRoleMenu" parameterType="java.lang.String">
        insert into re_role_perms(pk_rolePerms_id,fk_role_id,fk_perms_id)
        values (#{pk_rolePerms_id},#{fk_role_id},#{fk_perms_id})
    </insert>
    <!--No problem 添加用户角色    -->
    <insert id="addUserRole" parameterType="java.lang.String">
        insert into re_user_role(pk_userRole_id,fk_user_id,fk_role_id)
        values (#{pk_userRole_id},#{fk_user_id},#{fk_role_id})
    </insert>
    <!--角色批量添加用户    -->
    <insert id="addUserRoleByList" parameterType="list">
        insert ALL
        <foreach collection="idList" item="item" separator="">
            INTO
            re_user_role(pk_userRole_id,fk_user_id,fk_role_id)
            values
            (
            #{item.pk_userRole_id, jdbcType=VARCHAR},
            #{item.fk_user_id, jdbcType=VARCHAR},
            #{item.fk_role_id, jdbcType=VARCHAR}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <!--No problem 角色添加权限    -->
    <insert id="addRoleMenuByList">
        insert ALL
        <foreach collection="idList" item="item" separator="">
            INTO
            re_role_perms(pk_rolePerms_id,fk_role_id,fk_perms_id)
            values
            (
            #{item.pk_rolePerms_id, jdbcType=VARCHAR},
            #{item.fk_role_id, jdbcType=VARCHAR},
            #{item.fk_perms_id, jdbcType=VARCHAR}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <!--No problem 添加用户角色    -->
    <insert id="addUserRoleByUserRole" parameterType="com.hjy.system.entity.ReUserRole">
       insert into re_user_role(pk_userRole_id,fk_user_id,fk_role_id)
        values (#{pk_userRole_id},#{fk_user_id},#{fk_role_id})
    </insert>
    <!--No problem 添加角色权限    -->
    <insert id="insertRolePerms" parameterType="com.hjy.system.entity.ReRolePerms">
        insert into re_role_perms(pk_rolePerms_id,fk_role_id,fk_perms_id)
        values (#{pk_rolePerms_id},#{fk_role_id},#{fk_perms_id})
    </insert>
    <!--No problem通过主键修改数据-->
    <update id="updateById">
        update t_sys_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=DATE},
            </if>
            <if test="enableStatus != null">
                enable_status = #{enableStatus,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=DATE},
            </if>
        </set>
        where pk_role_id = #{pkRoleId,jdbcType=VARCHAR}
    </update>
    <!--No problem通过主键删除-->
    <delete id="deleteById">
        delete from t_sys_role where pk_role_id = #{pkRoleId,jdbcType=VARCHAR}
    </delete>
    <!--No problem    通过roleId删除原有的所有菜单-->
    <delete id="deleteRolePermsByRoleId" parameterType="java.lang.String">
        delete from re_role_perms where fk_role_id =#{fkRoleId,jdbcType=VARCHAR}
    </delete>
    <!--No Problem    通过roleId删除用户角色-->
    <delete id="deleteUserRoleByRoleId" parameterType="java.lang.String">
        delete from re_user_role where fk_role_id =#{fkRoleId,jdbcType=VARCHAR}
    </delete>
    <!--No Problem查询所有行数据 -->
    <select id="selectAll" resultType="com.hjy.system.entity.TSysRole">
        select * from t_sys_role
    </select>
    <!--No Problem-->
    <select id="selectUserRoleByrole_id" resultType="java.lang.String" parameterType="java.lang.String">
        select fk_user_id from re_user_role where fk_role_id = #{fkRoleId,jdbcType=VARCHAR}
    </select>
    <!--No Problem-->
    <select id="selectRoleIdByUserId" resultType="string">
        select fk_role_id
        from re_user_role
        where fk_user_id = #{fkUserId,jdbcType=VARCHAR}
    </select>
    <!--No Problem-->
    <select id="selectRoleByUserId" resultType="com.hjy.system.entity.TSysRole">
    SELECT
	t_sys_role.pk_role_id as pkRoleId,
	t_sys_role.role_name as roleName,
	t_sys_role.role_desc as roleDesc,
	t_sys_role.create_date as createDate,
	t_sys_role.enable_status as enableStatus,
	t_sys_role.modify_time as modifyTime
    FROM
	re_user_role
	INNER JOIN
	t_sys_user
	ON
		re_user_role.fk_user_id = t_sys_user.pk_user_id
	INNER JOIN
	t_sys_role
	ON
		re_user_role.fk_role_id = t_sys_role.pk_role_id
    where pk_user_id = #{pkUserId,jdbcType=VARCHAR}
    </select>
    <!--No Problem-->
    <select id="selectPermsCodeByRole" resultType="string" parameterType="java.lang.String">
    SELECT
        t_sys_perms.perms_code
    FROM
        re_role_perms
	INNER JOIN
	    t_sys_perms
	ON
		re_role_perms.fk_perms_id = t_sys_perms.pk_perms_id
		where re_role_perms.fk_role_id =#{fkRoleId}
    </select>
    <!--No Problem-->
    <select id="selectPermsByRole" resultType="com.hjy.system.entity.TSysPerms">
    SELECT
        t_sys_perms.*
    FROM
        re_role_perms
	INNER JOIN
	    t_sys_perms
	ON
		re_role_perms.fk_perms_id = t_sys_perms.pk_perms_id
		where re_role_perms.fk_role_id =#{fkRoleId}
    </select>
    <!--No Problem-->
    <select id="selectUserRole_userIded" resultType="java.lang.String">
        select fk_user_id from re_user_role where fk_role_id in (select distinct fk_role_id from  re_user_role)
    </select>
    <select id="selectAllUsername" resultType="java.lang.String">
        select username from t_sys_user
    </select>

</mapper>